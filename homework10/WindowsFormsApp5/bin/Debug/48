<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Java技术栈 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip.min.css?v=1CubIA3L29CO3-6VLJIOrrj2uGfyKeX_-xaumWzHk7o" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/javastack/custom.css?v=TyYvkiijeoOdLUAlPYzoZBdm&#x2B;e0=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip-mobile.min.css?v=0pGk3D9Ik_jI4q1TALBT2ybOjIePHS_80_0J4DDOQiY" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/javastack/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/javastack/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/javastack/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 373522;
        var currentBlogApp = 'javastack';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'darkgreentrip';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/javastack/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/javastack/">Java技术栈</a>
</h1>
<h2>
分享Java技术，高并发编程，分布式技术，架构设计，Java面试题，算法，行业动态，程序人生等。
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/javastack/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/Java%E6%8A%80%E6%9C%AF%E6%A0%88">
联系</a></li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
401&nbsp; </span>
<span id="stats_article_count">文章 - 
1&nbsp; </span>
<span id="stats-comment_count">评论 - 
71</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/javastack/archive/2018/10/02.html">2018年10月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/9736449.html">
[置顶]    史上最全 40 道 Dubbo 面试题及答案，看完碾压面试官！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：想往高处走，怎么能不懂 Dubbo？ Dubbo是国内最出名的分布式服务框架，也是 Java 程序员必备的必会的框架之一。Dubbo 更是中高级面试过程中经常会问的技术，无论你是否用过，你都必须熟悉。 下面我为大家准备了一些 Dubbo 常见的的面试题，一些是我经常问别人的，一些是我过去面试遇到的一            <a href="https://www.cnblogs.com/javastack/p/9736449.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-10-02 10:17 Java技术栈 阅读 (1155) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9736449" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/javastack/archive/2018/04/10.html">2018年4月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/8783383.html">
[置顶]    Java成神之路技术整理（长期更新）
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：以下是Java技术栈微信公众号发布的关于 Java 的技术干货，从以下几个方面汇总。            <a href="https://www.cnblogs.com/javastack/p/8783383.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-04-10 21:53 Java技术栈 阅读 (5196) 评论 (2)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=8783383" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/javastack/archive/2020/05/08.html">2020年5月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12848930.html">
    Java程序员必需掌握的 4 大基础！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：大概每个人在学生时代开始就使用Java了，我们一直在学习Java，但Java中总有一些概念含混不清，不论是对初级还是高级程序员都是如此。所以，这篇文章的目的就是弄清楚这些概念。 读完本文你会对这些概念有更深入的了解，还能弄清楚一切灰色的东西。在本书中，我们将讨论匿名内联类、多线程、同步和序列化。 1            <a href="https://www.cnblogs.com/javastack/p/12848930.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-08 10:21 Java技术栈 阅读 (36) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12848930" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12848446.html">
    Redis 到底是单线程还是多线程？我要吊打面试官！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：最近在Java技术栈公众号发布的一篇文章，其中有一道题： Redis是多线程还是单线程？（回答单线程的请回吧，为什么请回，请往下看） 好些粉丝在后台问我： 为什么请回，Redis不是单线程吗？ 大家注意审题： Redis是多线程还是单线程？ 这个问题你要从多个方面回答，如果你仅仅只回答 &quot;单线程&quot;             <a href="https://www.cnblogs.com/javastack/p/12848446.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-08 09:10 Java技术栈 阅读 (338) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12848446" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12848357.html">
    Java中的锁原理、锁优化、CAS、AQS详解！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：高广超 www.jianshu.com/p/e674ee68fd3f 一、为什么要用锁？ ============= 锁 是为了解决并发操作引起的脏读、数据不一致的问题。 二、锁实现的基本原理 ============== 2.1、volatile Java编程语言允许线程访问共享变量， 为了            <a href="https://www.cnblogs.com/javastack/p/12848357.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-08 08:51 Java技术栈 阅读 (28) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12848357" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/javastack/archive/2020/05/07.html">2020年5月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12844891.html">
    天天用Synchronized，底层原理是个啥？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：iuxiaopeng https://www.cnblogs.com/paddix/p/5367116.html Synchronized 的基本使用 Synchronized 的作用主要有三个： 确保线程互斥的访问同步代码 保证共享变量的修改能够及时可见 有效解决重排序问题 从语法上讲，Sy            <a href="https://www.cnblogs.com/javastack/p/12844891.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 18:53 Java技术栈 阅读 (28) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12844891" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12844558.html">
    LinkedHashMap 源码分析，底层竟这么简单！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：Pz cnblogs.com/panzi/p/10845079.html LinkedHashMap&#160;是一个键有序的 可以将 理解为 + 所以研究 之前要先看 代码，这里不再赘述。 其实 无非就是通过链表结构将存储在 中的数据通过 连接起来。 作为一个链表结构 ,`tail&#160;`必不可少 还要有            <a href="https://www.cnblogs.com/javastack/p/12844558.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 17:53 Java技术栈 阅读 (18) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12844558" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12844553.html">
    学习java多线程，这必须搞懂的这几个概念，很重要。
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：同步和异步 同步，Synchronous，即调用方法开始，一旦调用就必须等待方法执行完返回才能继续下面的操作。 举个例子，你去银行ATM取钱，你必须等到ATM吐完钱你拿到钱取完卡你才能离开。 异步，Asynchronous，即不关心方法执行的过程，触发要调用的方法就继续执行下面的操作，不会像同步那样            <a href="https://www.cnblogs.com/javastack/p/12844553.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 17:52 Java技术栈 阅读 (27) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12844553" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12843678.html">
    Netty 如何实现心跳机制与断线重连？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：sprinkle_liz www.jianshu.com/p/1a28e48edd92 心跳机制 何为心跳 所谓心跳, 即在&#160;TCP&#160;长连接中, 客户端和服务器之间定期发送的一种特殊的数据包, 通知对方自己还在线, 以确保&#160;TCP&#160;连接的有效性. 注：心跳包还有另一个作用，经常被忽略，即： 一            <a href="https://www.cnblogs.com/javastack/p/12843678.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 16:09 Java技术栈 阅读 (24) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12843678" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12843070.html">
    为什么要进行 URL 编码？？？
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：降瑞雪 cnblogs.com/jerrysion/p/5522673.html 我们都知道Http协议中参数的传输是&quot;key=value&quot;这种简直对形式的，如果要传多个参数就需要用“&amp;”符号对键值对进行分割。 如&quot;?name1=value1&amp;name2=value2&quot;，这样在服务端在收到这种            <a href="https://www.cnblogs.com/javastack/p/12843070.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 14:55 Java技术栈 阅读 (41) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12843070" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12842586.html">
    Java并发编程中的若干核心技术，向高手进阶！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：来源：简书 http://www.jianshu.com/p/5f499f8212e7 引言 本文试图从一个更高的视角来总结Java语言中的并发编程内容，希望阅读完本文之后，可以收获一些内容，至少应该知道在Java中做并发编程实践的时候应该注意什么，应该关注什么，如何保证线程安全，以及如何选择合适的            <a href="https://www.cnblogs.com/javastack/p/12842586.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 13:52 Java技术栈 阅读 (29) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12842586" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/javastack/p/12841895.html">
    两张趣图助你理解 HTTP 状态码！
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：作者：web开发者 https://www.sohu.com/a/190263277_467792 HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。 我们可以通过查看HTTP状态码来判断服务器状态，常见的有404 、502等；但是其他不是很常见的            <a href="https://www.cnblogs.com/javastack/p/12841895.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-05-07 11:39 Java技术栈 阅读 (28) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12841895" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/javastack/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 Java技术栈
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>