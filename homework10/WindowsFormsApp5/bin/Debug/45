<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="作者： &amp;quot;HelloGitHub 追梦人物&amp;quot; 文中所涉及的示例代码，已同步更新到 &amp;quot;HelloGitHub Team 仓库&amp;quot; django rest frame" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>第 4 篇：用类视图实现首页 API - 削微寒 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey.min.css?v=_B1ixsexV8tpUJyj4tVsjnDwkM8eRY6ZCwGSi1TrV7s" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/xueweihan/custom.css?v=RRRtuZg9tgADpy&#x2B;UPLStdn026o0=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey-mobile.min.css?v=cYvlxMu_nd6MVfg-vi7YqOC6FaZ7VHFsDM166vO_ekA" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xueweihan/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xueweihan/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xueweihan/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 228315;
        var currentBlogApp = 'xueweihan';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'BlackLowKey';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <a href="https://github.com/521xueweihan/HelloGitHub/"><img style="position: absolute; top: 0; right: 0; border: 0" src="https://images.cnblogs.com/cnblogs_com/xueweihan/859919/o_200129100904forkme_right_green_007200.png" alt="Fork me on GitHub" data-canonical-src="https://images.cnblogs.com/cnblogs_com/xueweihan/859919/o_200129100904forkme_right_green_007200.png"></a>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/xueweihan/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xueweihan/">削微寒的程序员之路</a>
</h1>
<h2>
谦逊、专注，才能成长。
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xueweihan/">
首页</a>
</li>
<li>


</li>
<li>
</li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/xueweihan/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
327&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
1149</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/xueweihan/p/12845530.html">第 4 篇：用类视图实现首页 API</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <p><img src="https://img2020.cnblogs.com/blog/759200/202004/759200-20200415161158343-1662112908.jpg" alt=""></p>
<p>作者：<a href="https://www.zmrenwu.com">HelloGitHub-追梦人物</a></p>
<blockquote>
<p>文中所涉及的示例代码，已同步更新到 <a href="https://github.com/HelloGitHub-Team/HelloDjango-REST-framework-tutorial">HelloGitHub-Team 仓库</a></p>
</blockquote>
<p>django-rest-framework 类视图拓展自 django 的类视图，只是针对数据的序列化和反序列化等逻辑做了封装。</p>
<p>django-rest-framework 中最基本的类视图是 <code>views.APIView</code>，这个类可以看成是上一篇教程中用到的 api_view 装饰器的类版本。这个类比较基础，其核心功能就是 HTTP 请求预处理、分发请求给对应的处理函数，以及 HTTP 响应后处理，还有就是 <code>as_view</code> 方法将类转为函数（要注意与被请求的 URL 绑定的视图必须是一个可调用对象，普通的的类是无法被直接调用的）。除非需要深度定制视图函数的逻辑，一般情况下我们的视图不会直接继承这个类。</p>
<p>更为通用的类视图是 <code>GenericAPIView</code>，这个类继承自 <code>APIView</code>，对基类的功能做了拓展。继承自这个类的视图，只需对其类属性做一些简单的配置，就能获得获取单个资源、获取资源列表、资源列表分页等功能。当然，这个类作为其他特定功能类视图的基类，我们一般也很少使用。</p>
<p>回顾一下此前讲的 RESTful 架构的基本概念，客户端使用 URL 访问资源，通过 HTTP 请求的动词表达对资源的操作。django-rest-framework 针对各种类型的资源操作，提供了对应的通用类视图，这些通用类视图主要包括：</p>
<ul>
<li>
<p><strong>CreateAPIView</strong></p>
<p>用于创建资源的 POST 请求。</p>
</li>
<li>
<p><strong>ListAPIView</strong> 和 <strong>RetrieveAPIView</strong></p>
<p>用于访问资源列表和单个资源的 GET 请求。</p>
</li>
<li>
<p><strong>DestroyAPIView</strong></p>
<p>用于删除资源的 DELETE 请求。</p>
</li>
<li>
<p><strong>UpdateAPIView</strong></p>
<p>用于更新资源的 PUT（全量更新）和 PATCH（部分更新）请求。</p>
</li>
</ul>
<p>以及以上视图的各种组合通用类视图：<code>ListCreateAPIView</code>、<code>RetrieveUpdateAPIView</code>、<code>RetrieveDestroyAPIView</code>、<code>RetrieveUpdateDestroyAPIView</code>。</p>
<p>博客首页 API 返回首页文章列表数据，显然应该选用的是 <code>ListAPIView</code>。其代码如下：</p>
<pre><code class="language-python">from rest_framework.generics import ListAPIView
from rest_framework.pagination import PageNumberPagination
from rest_framework.permissions import AllowAny

class IndexPostListAPIView(ListAPIView):
    serializer_class = PostListSerializer
    queryset = Post.objects.all()
    pagination_class = PageNumberPagination
    permission_classes = [AllowAny]
</code></pre>
<p>That all！首页 API 就写好了。我们基本没有写任何逻辑代码，只是指定了类视图的几个属性值。因为逻辑基本都是通用的，通用类视图在背后帮我们做了全部工作，我们只要告诉它：用哪个序列化器去做，序列化哪个资源等就可以了。以这里的类视图为例，我们指定了：</p>
<p>使用 <code>PostListSerializer</code> 序列化器（通过 <code>serializer_class</code> 指定）；</p>
<p>序列化博客文章（Post）列表（通过 <code>queryset</code> 指定）；</p>
<p>对资源列表分页（通过 <code>pagination_class</code> 指定，<code>PageNumberPagination</code> 会自动对资源进行分页，后面的教程会详细介绍分页功能）；</p>
<p>允许任何人访问该资源（通过 <code>permission_classes</code> 指定，<code>AllowAny</code> 权限类不对任何访问做拦截，即允许任何人调用这个 API 以访问其资源）。</p>
<p>最后一步就是在 urls.py 中绑定接口，把原来绑定的函数视图改为现在的类视图：</p>
<pre><code class="language-python">path('api/index/', views.IndexPostListAPIView.as_view())
</code></pre>
<p>启动开发服务器，打开浏览器访问 <a href="http://127.0.0.1:8000/api/index/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%92%8C%E4%B8%8A%E4%B8%80%E7%AF%87%E6%95%99%E7%A8%8B%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%86%E5%9B%BE%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%9C%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%9A">http://127.0.0.1:8000/api/index/，可以看到和上一篇教程中使用函数视图返回的结果是一样的：</a></p>
<pre><code class="language-json">{
    &quot;count&quot;: 201,
    &quot;next&quot;: &quot;http://127.0.0.1:10000/api/index/?page=2&quot;,
    &quot;previous&quot;: null,
    &quot;results&quot;: [
        {
            &quot;id&quot;: 1,
            &quot;title&quot;: &quot;Markdown 与代码高亮测试&quot;,
            &quot;created_time&quot;: &quot;2020-04-23T14:22:36.129383+08:00&quot;,
            &quot;excerpt&quot;: &quot;欢迎使用马克飞象\n@(示例笔记本)[马克飞象|帮助|Markdown]\n马克飞象是一款专为印象笔记（Ever&quot;,
            &quot;category&quot;: {
                &quot;id&quot;: 6,
                &quot;name&quot;: &quot;Markdown测试&quot;
            },
            &quot;author&quot;: {
                &quot;id&quot;: 1,
                &quot;username&quot;: &quot;admin&quot;
            },
            &quot;views&quot;: 0
        }
    ]
}
</code></pre>
<p>而且可以看到，返回的结果进行了分页，next 字段指示了下一页的链接，这样分页访问资源就变的非常方便了。</p>
<hr>
<p><img src="https://img2018.cnblogs.com/blog/759200/202002/759200-20200213201956024-782757549.png" alt=""></p>
<p><strong>关注公众号加入交流群</strong></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-05-08 09:19</span>&nbsp;
<a href="https://www.cnblogs.com/xueweihan/">削微寒</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12845530" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12845530);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 228315, cb_blogApp = 'xueweihan', cb_blogUserGuid = '41673165-d8fd-e411-b908-9dcfd8948a71';
    var cb_entryId = 12845530, cb_entryCreatedDate = '2020-05-08 09:19', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 削微寒
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>