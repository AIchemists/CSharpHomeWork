<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="前面介绍了Spring Boot 中的整合Mybatis并实现增删改查。不清楚的朋友可以看看之前的文章：https://www.cnblogs.com/zhangweizhong/category/1" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Spring Boot入门系列（十三）如何实现事务 - 章为忠 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip.min.css?v=1CubIA3L29CO3-6VLJIOrrj2uGfyKeX_-xaumWzHk7o" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip-mobile.min.css?v=0pGk3D9Ik_jI4q1TALBT2ybOjIePHS_80_0J4DDOQiY" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/zhangweizhong/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/zhangweizhong/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/zhangweizhong/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 171085;
        var currentBlogApp = 'zhangweizhong';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'darkgreentrip';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/zhangweizhong/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/zhangweizhong/">章为忠</a>
</h1>
<h2>
【章小鱼】虽千万人，吾往矣。
我的博客地址：<a href="http://www.fpeach.com/">www.fpeach.com</a>
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/zhangweizhong/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%AB%A0%E4%B8%BA%E5%BF%A0">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/zhangweizhong/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
180&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
691</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/zhangweizhong/p/12680873.html">Spring Boot入门系列（十三）如何实现事务</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>前面介绍了Spring Boot 中的整合Mybatis并实现增删改查。不清楚的朋友可以看看之前的文章：<a href="https://www.cnblogs.com/zhangweizhong/category/1657780.html">https://www.cnblogs.com/zhangweizhong/category/1657780.html</a>。</p>
<p>Spring Boot 整合完Mybatis，有个特别重要的功能之前忘记讲了：那就是Spring Boot如何实现事物控制。在我们的实际系统中，事务会被经常用到。特别是数据库操作或者是复杂的业务操作时，必须事物执行。必须保证本次业务的处理结果更改要么都成功，要么都失败。那么这种场景下，我们改如何实现呢？</p>
<p>&nbsp;</p>
<h2 id="b3_solo_h3_21">为什么要事务</h2>
<p>以转账业务为例：一次转载业务涉及数据库表的两次更改。为确保业务完整性，需保证这两次更改要么都成功，要么都失败。否则账户金额就做了，后果非常严重。</p>
<p><img src="https://img2020.cnblogs.com/blog/306976/202004/306976-20200411162841457-388673908.png" alt="" width="328" height="293"></p>
<p>&nbsp;</p>
<h2 id="b3_solo_h3_21">事务播行为</h2>
<pre>Propagation.REQUIRED -- 支持当前事务，如果当前没有事务，就新建一个事务,最常见的选择。</pre>
<pre>Propagation.SUPPORTS -- 支持当前事务，如果当前没有事务，就以非事务方式执行</pre>
<pre>Propagation.MANDATORY <em>-- </em>支持当前事务，如果当前没有事务，就抛出异常。</pre>
<pre>Propagation.REQUIRES_NEW <em>--</em> 新建事务，如果当前存在事务，把当前事务挂起, 两个事务之间没有关系，一个异常，一个提交，不会同时回滚。</pre>
<pre>Propagation.NOT_SUPPORTED <em>-- </em>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</pre>
<pre>Propagation.NEVER -- 以非事务方式执行，如果当前存在事务，则抛出异常<br /><br /></pre>
<h2 id="b3_solo_h2_27">如何实现</h2>
<p>1、首先创建Spring Boot项目，并整合Mybatis相关的依赖。这个之前的文章讲过，大家可以看我这篇文章：《<a class="postTitle2" href="https://www.cnblogs.com/zhangweizhong/p/12434053.html">Spring Boot入门系列（六）Spring Boot如何整合Mybatis【附详细步骤</a><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/zhangweizhong/p/12434053.html">】</a><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/zhangweizhong/p/12434053.html"></a>》</p>
<p>2、在需要事务的方法上添加&nbsp;<code>@Transactional</code>注解，并通过<code>propagation</code>指定事务机制。</p>
<p>修改UserServiceImpl 类和UserService类，增加&nbsp;saveUserTransactional 方法。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">    @Override
    @Transactional(propagation </span>=<span style="color: #000000;"> Propagation.REQUIRED)
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> saveUserTransactional(SysUser user) {

        userMapper.insert(user);

        </span><span style="color: #0000ff;">int</span> a = 1 / 0<span style="color: #000000;">;

        user.setIsDelete(</span>1<span style="color: #000000;">);
        userMapper.updateByPrimaryKeySelective(user);
    }</span></pre>
</div>
<p>说明：</p>
<ul>
<li><code>propagation = Propagation.REQUIRED</code>是默认的事务机制，若当前有事务则支持当前事务，否则新建事务。</li>
<li>springboot 开启事物很简单，只需要加注解@Transactional即可。</li>
<li><code>@Transactional</code>也可以加在类上，则该类所有方法都遵循该注解配置。</li>
</ul>
<p>&nbsp;3、测试调用</p>
<p>在之前的<em style="font-family: 'Courier New'; font-size: 12px;">MyBatisCRUDController</em>增加测试方法：saveUserTransactional。</p>
<div class="cnblogs_code">
<pre>    @RequestMapping("/saveUserTransactional"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> JSONResult saveUserTransactional() {

        String userId </span>=<span style="color: #000000;"> sid.nextShort();

        SysUser user </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> SysUser();
        user.setId(userId);
        user.setUsername(</span>"weiz" + <span style="color: #0000ff;">new</span><span style="color: #000000;"> Date());
        user.setNickname(</span>"weiz" + <span style="color: #0000ff;">new</span><span style="color: #000000;"> Date());
        user.setPassword(</span>"abc123"<span style="color: #000000;">);
        user.setIsDelete(</span>0<span style="color: #000000;">);
        user.setRegistTime(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> Date());

        userService.saveUserTransactional(user);

        </span><span style="color: #0000ff;">return</span> JSONResult.ok("保存成功"<span style="color: #000000;">);
    }</span></pre>
</div>
<p>&nbsp;</p>
<h2>测试</h2>
<p>首先我们看目前的sql数据中的数据，user表中数据如下：</p>
<p><img src="https://img2020.cnblogs.com/blog/306976/202004/306976-20200420185323219-655297089.png" alt="" width="618" height="203"></p>
<p>&nbsp;</p>
<p>&nbsp;在浏览器中数据：http://localhost:8080/mybatis/saveUserTransactional，也没返回执行异常，数据库中的数据也没有变化，说明数据已经回滚了：</p>
<p><img src="https://img2020.cnblogs.com/blog/306976/202004/306976-20200420185849544-1332255389.png" alt="" width="625" height="196"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>最后</h2>
<p>以上，就把Spring Boot中事物控制讲完了，是不是特别简单。</p>
<p>这个系列课程的完整源码，也会提供给大家。大家关注我的微信公众号（<span style="color: #00ffff;">架构师精进</span>），回复：springboot源码。获取这个系列课程的完整源码。</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-05-08 09:47</span>&nbsp;
<a href="https://www.cnblogs.com/zhangweizhong/">章为忠</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12680873" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12680873);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 171085, cb_blogApp = 'zhangweizhong', cb_blogUserGuid = 'a6084bc8-e391-e011-a53f-842b2b196315';
    var cb_entryId = 12680873, cb_entryCreatedDate = '2020-05-08 09:47', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 章为忠
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>