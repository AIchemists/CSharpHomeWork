<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="这两天弄了一下android相册的相关功能。还是花了挺长时间的，这里总结一下，避免以后再踩坑。同时也在这篇文章里面补齐一些android开发的基础支持 打开Android相册并选一个图片进行显示 分为" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Qt for Android （三） 打开Android相册并选一个图片进行显示 - 鬼谷子com - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/coffee/bundle-coffee.min.css?v=KPz7rj-c2sTAV1_ck1aDmbZcuCG3KBhyLnfvzf6nn94" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/coffee/bundle-coffee-mobile.min.css?v=na9bpAY4yh7uEWCcrXj3vfJM3VBse8YtU6-5fUUQPz0" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/wzxNote/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/wzxNote/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/wzxNote/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 252253;
        var currentBlogApp = 'wzxNote';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'coffee';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <a href="https://info.flagcounter.com/pQC8"><img src="https://s11.flagcounter.com/count2/pQC8/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_10/viewers_0/labels_0/pageviews_0/flags_0/percent_0/" alt="Flag Counter" border="0"></a>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/wzxNote/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/wzxNote/">鬼谷子com</a>
</h1>
<h2>
你见，或者不见我/我就在那里/不悲不喜    你念，或者不念我/情就在那里/不来不去<br>
你爱，或者不爱我/爱就在那里/不增不减    你跟，或者不跟我/我的手就在你手里/不舍不弃<br>
来我的怀里/或者/让我住进你的心里        默然/相爱/寂静/欢喜
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="navigator">
			
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/wzxNote/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E9%AC%BC%E8%B0%B7%E5%AD%90com">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/wzxNote/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/wzxNote/rss/">
    <img src="/skins/coffee/images/xml.gif" alt="订阅" />
</a></li>
</ul>



			<div class="blogStats">
				
				<!--done-->
随笔- 
110&nbsp;
文章- 
0&nbsp;
评论- 
75&nbsp;



				
			</div><!--end: blogStats -->
		</div><!--end: navigator 博客导航栏 -->
		<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class = "postTitle">
			
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/wzxNote/p/12849461.html">Qt for Android （三） 打开Android相册并选一个图片进行显示</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <p>这两天弄了一下android相册的相关功能。还是花了挺长时间的，这里总结一下，避免以后再踩坑。同时也在这篇文章里面补齐一些android开发的基础支持</p>
<h2 id="打开android相册并选一个图片进行显示">打开Android相册并选一个图片进行显示</h2>
<p><strong>分为几个步骤:</strong></p>
<ol>
<li>
<p>QtCreator新建Android工程</p>
<p>本例使用的是arm64-v8 Android开发套件。</p>
</li>
<li>
<p>构建工程并在构建目录中找到AndroidManifest.xml</p>
<p>创建的Android工程build之后都会在<strong>android-build</strong>根目录下生成一个AndroidManifest.xml文件。这个文件是android开发很重要个的一个文件，是应用清单。项目中引用的java包、app的横屏和竖屏、app的是否全屏等等很多功能都是在里面设置的。下面有一些详细的参考文章：</p>
<p><a href="https://www.jianshu.com/p/3b5b89d4e154">AndroidManifest.xml详解</a></p>
</li>
<li>
<p>在工程中添加AndroidManifest.xml和java文件。</p>
<p>java文件是自己创建的用来写一些java代码调用android原生功能的相当于c++中的一个类的文件。</p>
<p>java文件可以从网上找一个来参考着写。等会我会附上gitee的地址供大家参考。</p>
<p>放出java的代码简单看一下吧：</p>
<pre><code class="language-java">public class OpenAndroidAlbum extends QtActivity
{

    public static native void fileSelected(String fileName);

    static final int REQUEST_OPEN_IMAGE = 1;
    public String lastCameraFileUri;
    static final int REQUEST_CAPTURE_IMAGE = 2;

    private static OpenAndroidAlbum m_instance;

    public OpenAndroidAlbum()
    {
        m_instance = this;
    }

    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
    }

    @Override
    protected void onDestroy()
    {
        super.onDestroy();
    }

    static void openAnImage()
    {
        m_instance.dispatchOpenGallery();
    }
 @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data)
    {
    System.out.println(&quot;===dispatchOpenGallery1===&quot;);
       if (resultCode == RESULT_OK)
        {
	    if(requestCode == REQUEST_OPEN_IMAGE)
	    {
		String filePath = getRealPathFromURI(getApplicationContext(), data.getData());
		fileSelected(filePath);
		}
	}
        else
	{
//	    fileSelected(&quot;:(&quot;);
        }

        super.onActivityResult(requestCode, resultCode, data);
    }

    private void dispatchOpenGallery()
    {
	Intent intent = new Intent(Intent.ACTION_PICK);
	intent.setType(&quot;image/*&quot;);
	startActivityForResult(intent, REQUEST_OPEN_IMAGE);
    }

    public String getRealPathFromURI(Context context, Uri contentUri)
    {
	Cursor cursor = null;
	try
	{
	    String[] proj = { MediaStore.Images.Media.DATA };
	    cursor = context.getContentResolver().query(contentUri,  proj, null, null, null);
	    int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
	    cursor.moveToFirst();
	     System.out.println(column_index);
	    return cursor.getString(column_index);
	}
        finally
	{
	    if (cursor != null)
	    {
		cursor.close();
		}
	}
    }

}
</code></pre>
</li>
</ol>
<ul>
<li>
<p><strong>fileSelected</strong>这个静态函数是我们在c++代码中定义的。java和c++的混合编程是通过JNI来实现的，</p>
<pre><code class="language-c++">#ifdef Q_OS_ANDROID
#ifdef __cplusplus
extern &quot;C&quot; {
#endif


JNIEXPORT void JNICALL
Java_org_qtproject_example_OpenAndroidAlbum_OpenAndroidAlbum_fileSelected(JNIEnv */*env*/,
                                                                          jobject /*obj*/,
                                                                          jstring results)
{
    selectedFileName = QAndroidJniObject(results).toString();
    qDebug() &lt;&lt; &quot;fileName = &quot; &lt;&lt; selectedFileName;
}
#ifdef __cplusplus
}
#endif
#endif
</code></pre>
<p>名字看起来很长<em>Java</em>是固定头部，<em>org_qtproject_example_OpenAndroidAlbum</em>这个是java包名，<em>OpenAndroidAlbum</em>是类名，最后<em>fileSelected</em>这个才是函数名。需要注意的是<strong>由于jni函数名映射成java函数名的时候是依靠“<em>”来间隔包、类、方法的，如果你的函数中有“</em>”字符的话，jni必须能够区分函数名中的“_”是字符还是分隔符，所以在函数名前面需要加1用于区分。</strong></p>
<p>由于JNI的函数是c函数，所以要加上<code>extern &quot;C&quot;</code>。这样定义好之后的函数就可以在java中直接调用了，还是很方便的。</p>
</li>
<li>
<p><strong>openAnImage</strong>是我们定义打开图片按钮的响应函数</p>
<p>java中定义的函数在c++中调用的方法是通过Qt的<strong>QAndroidJniObject</strong>类的一个静态方法实现的：</p>
<pre><code class="language-c++">QAndroidJniObject::callStaticMethod&lt;void&gt;(&quot;org/qtproject/example/OpenAndroidAlbum/OpenAndroidAlbum&quot;,
                                              &quot;openAnImage&quot;,
                                              &quot;()V&quot;);
</code></pre>
<p>第一个参数是类名其实也是包名，是在java文件中通过</p>
<p><code>package org.qtproject.example.OpenAndroidAlbum;</code></p>
<p>定义的。</p>
</li>
<li>
<p><strong>dispatchOpenGallery</strong>这个方法用来调用相册</p>
<p>通过<em>Intent</em>对象和<em>startActivityForResult</em>实现调用。这里有一个坑，<code>Intent intent = new Intent(Intent.ACTION_PICK);</code>创建对象的时候<strong>ACTION_PICK</strong>这个枚举要用对，4.4以后的版本好像要用这个，我也是之前怎么都打不开相册，改了这个枚举之后就可以了。</p>
</li>
<li>
<p><strong>onActivityResult</strong>在相册中选中一张图片之后会调用这个回调</p>
<p>很自然就会想到我们在c++中定义的<em>fileSelected</em>函数要在这个地方调用了。把路径转换成java的String类型，调用<code>fileSelected(filePath)</code>就可以在Qt代码中处理图片路径了。</p>
</li>
</ul>
<ol start="4">
<li>
<p>在Qt代码中调用java的打开相册的方法，同时利用JNI定义一个c++的处理方法</p>
<p>这个我们在上一条中也提到了。这里提一下编码中容易出错的地方</p>
<pre><code class="language-c++">    QAndroidJniObject::callStaticMethod&lt;void&gt;(&quot;org/qtproject/example/OpenAndroidAlbum/OpenAndroidAlbum&quot;,
                                              &quot;openAnImage&quot;,
                                              &quot;()V&quot;);
</code></pre>
<p>第一个字符串代表java包，相当于一个c++的类。如果遇到编译过程中遇到<strong>“找不到类&quot;</strong>的类似错误提示检查一下第一个字符串，最后是以<strong>OpenAndroidAlbum.java</strong>包的前缀结尾的，切记！！！</p>
</li>
<li>
<p>AndroidManifest.xml要做相应的修改</p>
<p>上面也提到了，这个文件是清单列表可以用来指定要调用j的ava包</p>
<pre><code class="language-XML">&lt;manifest package=&quot;org.qtproject.example.OpenAndroidAlbum&quot; xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:versionName=&quot;1.0&quot; android:versionCode=&quot;1&quot; android:installLocation=&quot;auto&quot;&gt;
    &lt;uses-sdk android:minSdkVersion=&quot;16&quot; android:targetSdkVersion=&quot;28&quot;/&gt;
</code></pre>
<p>把<strong>package=</strong>这个包名的属性做对应的修改。</p>
</li>
<li>
<p>完成了上述5点之后还要修改软件的权限，获取<strong>允许打开相册</strong>的权限之后才能正常的打开相册图片</p>
</li>
</ol>
<p>gitee地址：<a href="https://gitee.com/guiguzicom/Demo/tree/master/OpenAndroidAlbum">https://gitee.com/guiguzicom/Demo/tree/master/OpenAndroidAlbum</a></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
		</div>
		<div class="postDesc">posted @ 
<span id="post-date">2020-05-08 11:26</span>&nbsp;
<a href="https://www.cnblogs.com/wzxNote/">鬼谷子com</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12849461" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12849461);return false;">收藏</a></div>
	</div>
	
	
</div><!--end: topics 文章、评论容器-->
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 252253, cb_blogApp = 'wzxNote', cb_blogUserGuid = '2177f1aa-e386-e211-9984-842b2b196315';
    var cb_entryId = 12849461, cb_entryCreatedDate = '2020-05-08 11:26', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 鬼谷子com
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>