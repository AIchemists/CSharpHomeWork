<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="前言 我之前的工作中一直在用 Elastic Job 来做任务调度。这也是大家为什么能在我的书籍《Spring Cloud 微服务 入门 实战与进阶》中看到 Elastic Job 的章节。 从 20" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>笑话：大厂都在用的任务调度框架我能不知道吗？？？ - 猿天地 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/banlieue13/bundle-banlieue13.min.css?v=1J0RP_opHZcWv1yy974pRZewfj9S0p6tTP1QNRnmMiI" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/yinjihuan/custom.css?v=NtBRJkJK6PFpkDxbnwTt8TkWAMc=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/banlieue13/bundle-banlieue13-mobile.min.css?v=cTNtJQ6_6SB1QXNeWlP0QHJBE4K5SDodawH8t2CtJ3Y" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/yinjihuan/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/yinjihuan/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/yinjihuan/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 496691;
        var currentBlogApp = 'yinjihuan';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'Banlieue13';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/yinjihuan/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/yinjihuan/">猿天地</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="navigator">
			
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/yinjihuan/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%8C%BF%E5%A4%A9%E5%9C%B0">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/yinjihuan/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/yinjihuan/rss/">
    <img src="/skins/banlieue13/images/xml.gif" alt="订阅" />
</a></li>
</ul>



			<div class="blogStats">
				
				<!--done-->
随笔- 
71&nbsp;
文章- 
0&nbsp;
评论- 
34&nbsp;



				
			</div><!--end: blogStats -->
		</div><!--end: navigator 博客导航栏 -->
		<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class = "postTitle">
			
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/yinjihuan/p/12849787.html">笑话：大厂都在用的任务调度框架我能不知道吗？？？</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h2 id="前言">前言</h2>
<p>我之前的工作中一直在用 Elastic-Job 来做任务调度。这也是大家为什么能在我的书籍《Spring Cloud 微服务 入门 实战与进阶》中看到 Elastic-Job 的章节。</p>
<p>从 2017 的 2.1.5 版本之后 Elastic-Job 没再更新过。我们在做技术选型的时候，对框架的使用范围和社区的活跃度都会比较看重，当然首先是功能点能够满足业务需求。</p>
<p>今天给大家新推荐一个任务调度框架，也许很多人听过甚至目前已经使用了很久。不过没关系，这也不影响你今天阅读本文章。</p>
<p>这个框架就是 XXL-JOB，一个轻量级分布式任务调度平台。最近在我的开源项目 Kitty-Cloud 中就采用了 XXL-JOB，还有一个原因是我目前任职的公司也一直在使用 XXL-JOB。</p>
<h2 id="xxl-job-的前世今生">XXL-JOB 的前世今生</h2>
<p>XXL-JOB 是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p>
<p>2015-11 月，XXL-JOB RELEASE 了第一个大版本 V1.0，在后面的几年里一直在更新。目前最新的版本是今年更新的 2.2.0。</p>
<h3 id="功能特性">功能特性</h3>
<ul>
<li>调度中心 HA（中心式）</li>
<li>执行器 HA（分布式）</li>
<li>执行器弹性扩容缩容</li>
<li>丰富的路由策略支持</li>
<li>支持高度容错故障转移</li>
<li>任务超时控制</li>
<li>任务失败重试</li>
<li>任务失败告警</li>
<li>任务动态分片</li>
<li>脚本任务</li>
<li>等等。。。</li>
</ul>
<h3 id="丰富的-web-后台">丰富的 WEB 后台</h3>
<p><strong>运行报表</strong></p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122856046-334768119.png" alt=""></p>
<p><strong>任务管理</strong></p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122905275-365469341.png" alt=""></p>
<p><strong>WEB IDE</strong></p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122915219-1330997548.png" alt=""></p>
<h3 id="xxl-job-使用场景">XXL-JOB 使用场景</h3>
<ul>
<li>订单超时取消</li>
<li>用户生日关怀短信发送</li>
<li>定时进行数据异构</li>
<li>每日商家结算</li>
<li>定时刷新缓存</li>
<li>....................</li>
</ul>
<h3 id="xxl-job-架构设计">XXL-JOB 架构设计</h3>
<p>XXL-JOB 将调度行为抽象形成“调度中心”公共平台，而平台自身并不承担业务逻辑，“调度中心”负责发起调度请求。</p>
<p>将任务抽象成分散的 JobHandler，交由“执行器”统一管理，“执行器”负责接收调度请求并执行对应的 JobHandler 中业务逻辑。</p>
<p>调度 和 任务 两部分可以相互解耦，提高系统整体稳定性和扩展性；</p>
<p>如下图，任务和调度是分开的，相互解耦。</p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122927060-414962813.png" alt=""></p>
<p>执行器嵌入在应用中，负责接收调度请求并执行任务逻辑。应用启动的时候会注册到调度中心，在后台有执行器管理功能，也可以手动添加执行器。</p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122937314-283698984.png" alt=""></p>
<p>XXL-JOB 整体架构如下图所示，调度中心分为任务管理，执行器管理，日志管理等模块。</p>
<p>任务管理主要对任务的一些操作，包括添加任务，编辑任务，暂停任务，启动任务等功能。</p>
<p>执行器管理主要对执行器的一些操作，查看机器列表，管理在线执行器等。</p>
<p>日志管理负责所有日志<em>相关的存储和展示。</em></p>
<p>其他模块包括了一些任务执行的报表，任务失败告警等功能。</p>
<p>执行器内部会暴露 Http 协议，调度中心在任务调度的时候，会向对应的执行器发起 Http 请求，执行器接收到请求后开始执行任务逻辑，执行器会回调调度中心，反馈任务执行的结果。</p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122945900-274430727.png" alt=""></p>
<h2 id="xxl-job-使用小技巧">XXL-JOB 使用小技巧</h2>
<h3 id="日志自动清理">日志自动清理</h3>
<p>XXL-JOB 中有调度日志和任务执行日志。如果任务多，调度频繁的话日志的数据量也挺大的，目前日志是存储在 Mysql 中，对应的表是 xxl_job_log。</p>
<p>在一开始用的时候发现 XXL-JOB 的后台直接有清理日志的按钮，直接在界面上操作非常即可，可以选择时间段清理，也还算方便。</p>
<p><img src="https://img2020.cnblogs.com/blog/1618095/202005/1618095-20200508122954917-1015138757.png" alt=""></p>
<p>通过手动的方式去操作必然会带来一个问题，就是忘记了，等到哪天卡的不行才会去清理一次，不智能。</p>
<p>当时就直接写了一个清理日志的任务，直接对 xxl_job_log 这张表进行删除操作，定时清理，这样就不用人工干预了。</p>
<p>后面发现 XXL-JOB 居然有自动清理的配置，这就是没仔细看文档的后果呀，通过下面的配置来决定执行器日志文件保存天数。</p>
<p>xxl.job.executor.logretentiondays=30</p>
<h3 id="任务自动注册">任务自动注册</h3>
<p>默认情况下，我们开发了一个任务需要到 XXL-JOB 的后台手动去添加一个任务。如果你想偷点懒的话我教你一个方式。</p>
<p>可以自己定义一个注解，然后项目启动的时候扫描注解，获取注解里的配置，调用 XXL-JOB 后的 API 接口直接插入，这样新加的任务在你启动后就自动创建了。</p>
<h3 id="扩展监控支持短信和钉钉">扩展监控支持短信和钉钉</h3>
<p>XXL-JOB 对任务的失败告警默认只支持邮件的方式，但是提供了扩展的方式，需要对后台的代码进行扩展才行。</p>
<p>可以自己动手扩展监控告警，比如支持钉钉消息，短信等告警方式。</p>
<p>扩展代码位置：JobFailMonitorHelper.failAlarm</p>
<p>数据格式：</p>
<pre><code>{
	&quot;emails&quot;: [&quot;xxx.mail.com&quot;, &quot;xxx.mail.com&quot;],
	&quot;dingdings&quot;: [{
		&quot;access_token&quot;: &quot; &quot;,
		&quot;secret&quot;: &quot;&quot;
	}],
	&quot;mobiles&quot;: [&quot;18211110000&quot;]
}
</code></pre>
<p>上面定义的 Json 数据格式我们可以直接用后台目前已有的监控邮箱的文本框进行输入，然后在</p>
<p>JobFailMonitorHelper 进行解析，选择对应的发送方式即可。</p>
<p>做的更友好的方式就直接把后台的那个编辑页面改掉，增加几个单独的短信，钉钉文本输入框。</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
		</div>
		<div class="postDesc">posted @ 
<span id="post-date">2020-05-08 12:31</span>&nbsp;
<a href="https://www.cnblogs.com/yinjihuan/">猿天地</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12849787" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12849787);return false;">收藏</a></div>
	</div>
	
	
</div><!--end: topics 文章、评论容器-->
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 496691, cb_blogApp = 'yinjihuan', cb_blogUserGuid = '42e3e585-54fd-4252-72d3-08d69f02802c';
    var cb_entryId = 12849787, cb_entryCreatedDate = '2020-05-08 12:31', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 猿天地
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>