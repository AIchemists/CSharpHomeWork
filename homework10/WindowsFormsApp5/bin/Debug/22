<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="一、jacoco 简介 jacoco 是一个开源的覆盖率工具，它针对的开发语言是 java。其使用方法很灵活，可以嵌入到 ant、maven 中；可以作为 Eclipse 插件；可以作为 javaAg" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>jacoco 生成单测覆盖率报告 - JMCui - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/jmcui/custom.css?v=utMgiRk7Z53Qs83Dcy&#x2B;n8qIW1ak=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/red_autumnal_leaves/bundle-red_autumnal_leaves-mobile.min.css?v=ADiCwO2hOTdd5yYidcx7eob7ix2VJI4o_TXjEycTHjs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/jmcui/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/jmcui/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/jmcui/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 352483;
        var currentBlogApp = 'jmcui';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'red_autumnal_leaves';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/jmcui/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/jmcui/">JMCui</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/jmcui/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/JMCui">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/jmcui/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
201&nbsp; </span>
<span id="stats_article_count">文章 - 
4&nbsp; </span>
<span id="stats-comment_count">评论 - 
113</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/jmcui/p/12843171.html">jacoco 生成单测覆盖率报告</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h2 id="一、jacoco-简介">一、jacoco 简介</h2>
<p>jacoco 是一个开源的覆盖率工具，它针对的开发语言是 java。其使用方法很灵活，可以嵌入到 ant、maven 中；可以作为 Eclipse 插件；可以作为 javaAgent 探针监控 java 程序等等。</p>
<p>很多第三方的工具提供了对 jacoco 的集成，如 sonar、jenkins 等等。</p>
<p>jacoco 包含了多种尺度的覆盖率计数器，包含指令级覆盖（Instructions,C0coverage）、分支覆盖（Branches,C1coverage）、圈复杂度（CyclomaticComplexity）、行覆盖（Lines）、方法覆盖（non-abstract methods）、类覆盖（classes），其含义如下：</p>
<ul>
<li>行覆盖率：度量被测程序的每行代码是否被执行，判断标准行中是否至少有一个指令被执行。</li>
<li>类覆盖率：度量计算 class 类文件是否被执行。</li>
<li>分支覆盖率：度量 if 和 switch 语句的分支覆盖情况，计算一个方法里面的总分支数，确定执行和不执行的分支数量。</li>
<li>方法覆盖率：度量被测程序的方法执行情况，是否执行取决于方法中是否有至少一个指令被执行。</li>
<li>指令覆盖：计数单元是单个 java 二进制代码指令，指令覆盖率提供了代码是否被执行的信息，度量完全独立源码格式。</li>
<li>圈复杂度：在（线性）组合中，计算在一个方法里面所有可能路径的最小数目，缺失的复杂度同样表示测试案例没有完全覆盖到这个模块。</li>
</ul>
<h2 id="二、jacoco-和-maven-集成">二、jacoco 和 maven 集成</h2>
<h3 id="21-mvn-命令增加参数">2.1 mvn 命令增加参数</h3>
<p>在执行 mvn 命令时，加上 &quot;org.jacoco:jacoco-maven-plugin:prepare-agent&quot; 参数即可。示例：</p>
<pre><code>mvn clean test org.jacoco:jacoco-maven-plugin:0.8.5:prepare-agent install -Dmaven.test.failure.ignore=true
</code></pre>
<p>其中，jacoco-maven-plugin 后面跟的是jacoco的版本。&quot;-Dmaven.test.failure.ignore=true&quot; 建议加上，否则如果单元测试失败，就会直接中断，不会产生 .exec 文件。</p>
<p>执行以上命令后，会在当前目录的 target 目录下产生一个jacoco.exec文件，该文件就是覆盖率的文件。</p>
<p>总体说来，这种方式比较简单，在与 jenkins 集成时也非常方便。</p>
<h3 id="22-在-pom-文件中使用-jacoco-插件">2.2 在 pom 文件中使用 jacoco 插件</h3>
<p>首先，需要添加 jacoco 的依赖：</p>
<pre><code>    &lt;properties&gt;
        &lt;jacoco.version&gt;0.8.5&lt;/jacoco.version&gt;
    &lt;/properties&gt;
</code></pre>
<pre><code>    &lt;dependency&gt;
        &lt;groupId&gt;org.jacoco&lt;/groupId&gt;
        &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${jacoco.version}&lt;/version&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
</code></pre>
<p>接着，我们需要配置 jacoco-maven-plugin 和 maven-surefire-plugin 内容：</p>
<pre><code>        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;argLine&gt;
                        -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.basedir}/target/coverage-reports/jacoco-unit.exec
                    &lt;/argLine&gt;
                    &lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;!--检查代码覆盖率的插件配置--&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.jacoco&lt;/groupId&gt;
                &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;0.8.5&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;!--指定生成.exec文件的存放位置--&gt;
                    &lt;destFile&gt;target/coverage-reports/jacoco-unit.exec&lt;/destFile&gt;
                    &lt;!--Jacoco是根据.exec文件生成最终的报告，所以需指定.exec的存放路径--&gt;
                    &lt;dataFile&gt;target/coverage-reports/jacoco-unit.exec&lt;/dataFile&gt;
                    &lt;includes&gt;
                        &lt;include&gt;**/service/**&lt;/include&gt;
                    &lt;/includes&gt;
                    &lt;!-- rules里面指定覆盖规则 --&gt;
                    &lt;rules&gt;
                        &lt;rule implementation=&quot;org.jacoco.maven.RuleConfiguration&quot;&gt;
                            &lt;element&gt;BUNDLE&lt;/element&gt;
                            &lt;limits&gt;　　
                                &lt;!-- 指定方法覆盖到50% --&gt;
                                &lt;limit implementation=&quot;org.jacoco.report.check.Limit&quot;&gt;
                                    &lt;counter&gt;METHOD&lt;/counter&gt;
                                    &lt;value&gt;COVEREDRATIO&lt;/value&gt;
                                    &lt;minimum&gt;0.50&lt;/minimum&gt;
                                &lt;/limit&gt;
                                &lt;!-- 指定分支覆盖到50% --&gt;
                                &lt;limit implementation=&quot;org.jacoco.report.check.Limit&quot;&gt;
                                    &lt;counter&gt;BRANCH&lt;/counter&gt;
                                    &lt;value&gt;COVEREDRATIO&lt;/value&gt;
                                    &lt;minimum&gt;0.50&lt;/minimum&gt;
                                &lt;/limit&gt;
                                &lt;!-- 指定类覆盖到100%，不能遗失任何类 --&gt;
                                &lt;limit implementation=&quot;org.jacoco.report.check.Limit&quot;&gt;
                                    &lt;counter&gt;CLASS&lt;/counter&gt;
                                    &lt;value&gt;MISSEDCOUNT&lt;/value&gt;
                                    &lt;maximum&gt;0&lt;/maximum&gt;
                                &lt;/limit&gt;
                            &lt;/limits&gt;
                        &lt;/rule&gt;
                    &lt;/rules&gt;
                &lt;/configuration&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;pre-test&lt;/id&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;prepare-agent&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                    &lt;execution&gt;
                        &lt;id&gt;post-test&lt;/id&gt;
                        &lt;phase&gt;test&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;report&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
</code></pre>
<p>&lt;includes&gt;或&lt;excludes&gt;标签的值应该是相对于目录 /classes/ 的编译类的类路径（而不是包名），用来指定哪些类需要进行单元测试。</p>
<p>另外 maven 的测试类需要遵循相应的规范命名，否则无法运行测试类，无法生成测试报告以及覆盖率报告。jacoco 使用的是 maven-surefire-plugin 插件，它的默认测试类名规范是：</p>
<ul>
<li>Test*.java：以 Test 开头的 Java 类;</li>
<li>*Test.java：以 Test 结尾的 Java 类;</li>
<li>*TestCase.java：以 TestCase 结尾的 Java 类;</li>
</ul>
<p>或者可以在pom中自定义测试类：</p>
<pre><code>&lt;plugin&gt;
	&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
	&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
	&lt;configuration&gt;
		&lt;includes&gt;
			&lt;include&gt;**/*Tests.java&lt;/include&gt;
			&lt;include&gt;**/*Test.java&lt;/include&gt;
		&lt;/includes&gt;
		&lt;excludes&gt;
			&lt;exclude&gt;**/Abstract*.java&lt;/exclude&gt;
		&lt;/excludes&gt;
	&lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<p>&lt;rules&gt; 指定筛选规则。</p>
<p>接着运行 mvn test 生成 index.html，即覆盖率报告<br>
<img src="https://img2020.cnblogs.com/blog/1153954/202005/1153954-20200507145600498-1897605575.png" alt=""></p>
<br>
<br>
推荐阅读：
<ol>
<li>ant 集成 jacoco：<a href="http://eclemma.org/jacoco/trunk/doc/ant.html">http://eclemma.org/jacoco/trunk/doc/ant.html</a></li>
<li>eclipse 使用 jacoco：<a href="http://www.eclemma.org/">http://www.eclemma.org/</a></li>
</ol>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-05-07 15:09</span>&nbsp;
<a href="https://www.cnblogs.com/jmcui/">JMCui</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12843171" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12843171);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 352483, cb_blogApp = 'jmcui', cb_blogUserGuid = 'e3fe74c3-b829-e711-9fc1-ac853d9f53cc';
    var cb_entryId = 12843171, cb_entryCreatedDate = '2020-05-07 15:09', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 JMCui
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>